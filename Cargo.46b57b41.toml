[package]
name = "solver"
categories = ["wasm"]
description = "Work Bites Solver"
version = "0.1.0"
authors = ["William Flores <will7207@gmail.com>"]
edition = "2018"
readme = "./README.md"
license = "Apache-2.0/MIT"

[lib]
crate-type = ["cdylib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
cfg-if = "0.1.5"
itertools = "0.9"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.5", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = true }

serde = "^1.0.59"
serde_derive = "^1.0.59"
probabilistic-collections = { version = "*", features = ["serde"] }
bincode = "1.2.1"
base64 = "0.12.1"

[dependencies.wasm-bindgen]
version = "0.2, <0.2.61"
features = ["serde-serialize"]

[dependencies.web-sys]
version = "0.3.6"
features = [
  'console'
]

[dev-dependencies]
wasm-bindgen-test = "0.2"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
